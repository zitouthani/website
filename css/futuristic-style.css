<!DOCTYPE html>
<html lang="fr">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>Robot AnimÃ© - PremiÃ¨re Vue</title>
<style>
/* === PremiÃ¨re section === */
#robot-section {
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    background-image: radial-gradient(#04f, #000);
    transition: opacity 1s ease;
    position: relative;
    z-index: 10;
}

/* === Robot statique (celui du design CSS) === */
#sketch-board-con {
    width: 350px;
    height: 350px;
    display: flex;
    justify-content: center;
    position: relative;
}
#sketch-board {
    margin-top: 20px;
    position: relative;
    transform: translateY(0);
    animation: moveRobot 2s infinite ease;
}

/* --- mÃªme CSS que ton robot existant --- */
#head { width: 166px; height: 150px; border: 3px solid #000; border-radius: 50%; background-color: #fff; box-shadow: inset 0 -10px #aac; display: flex; justify-content: center; align-items: center; position: relative; z-index: 4; }
/* (le reste de ton CSS reste inchangÃ© ici pour le robot stylisÃ©) */

/* === DeuxiÃ¨me section === */
#second-section {
    min-height: 100vh;
    background: #f0f0f0;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
}

/* === Canvas du robot flottant === */
#floating-robot {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 2;
    opacity: 0; /* invisible au dÃ©part */
    transition: opacity 1s ease;
}
</style>
</head>
<body>

<!-- === 1Ã¨re vue === -->
<section id="robot-section">
  <div id="sketch-board-con">
    <div id="sketch-board">
      <!-- ton robot statique -->
      <div id="head"><div id="lens"><div id="upper-shadow"></div><div id="eyes"></div></div><div id="rect"></div></div>
    </div>
  </div>
</section>

<!-- === 2áµ‰ vue === -->
<section id="second-section">
  <h1>Bienvenue sur la suite de ton site ðŸ‘‹</h1>
</section>

<!-- === Canvas du robot flottant === -->
<canvas id="floating-robot"></canvas>

<script>
// === Initialisation du canvas ===
const canvas = document.getElementById('floating-robot');
const ctx = canvas.getContext('2d');
canvas.width = window.innerWidth;
canvas.height = window.innerHeight;

// === Image du robot ===
const robotImage = new Image();
robotImage.src = 'https://raw.githubusercontent.com/zitouthani/website/main/robot.png';

// === Classe Robot ===
class Robot {
  constructor() { this.reset(); }
  reset() {
    this.x = Math.random() * canvas.width;
    this.y = Math.random() * canvas.height;
    this.size = 40 + Math.random() * 50;
    this.speedX = (Math.random() - 0.5) * 1.2;
    this.speedY = (Math.random() - 0.5) * 1.2;
    this.opacity = window.innerWidth < 768
      ? 0.08 + Math.random() * 0.05  // ðŸ”¹ plus transparent sur mobile
      : 0.02 + Math.random() * 0.05; // ðŸ”¹ trÃ¨s lÃ©ger sur PC
  }

  draw() {
    ctx.globalAlpha = this.opacity;
    if (robotImage.complete) ctx.drawImage(robotImage, this.x, this.y, this.size, this.size);
    ctx.globalAlpha = 1;
  }

  update() {
    this.x += this.speedX;
    this.y += this.speedY;
    if (this.x < 0 || this.x > canvas.width - this.size) this.speedX *= -1;
    if (this.y < 0 || this.y > canvas.height - this.size) this.speedY *= -1;
  }
}

// === Animation ===
let robots = [];
for (let i = 0; i < 3; i++) robots.push(new Robot());

function animate() {
  ctx.clearRect(0, 0, canvas.width, canvas.height);
  robots.forEach(r => { r.update(); r.draw(); });
  requestAnimationFrame(animate);
}

robotImage.onload = animate;

// === Redimensionnement ===
window.addEventListener('resize', () => {
  canvas.width = window.innerWidth;
  canvas.height = window.innerHeight;
});

// === Apparition uniquement sur la 2áµ‰ vue ===
window.addEventListener('scroll', () => {
  const secondSection = document.getElementById('second-section');
  const rect = secondSection.getBoundingClientRect();

  // Si la deuxiÃ¨me section est visible Ã  lâ€™Ã©cran
  if (rect.top < window.innerHeight && rect.bottom > 0) {
    canvas.style.opacity = '1'; // ðŸ”¹ apparition fluide
  } else {
    canvas.style.opacity = '0'; // ðŸ”¹ disparition fluide
  }
});
</script>

</body>
</html>
